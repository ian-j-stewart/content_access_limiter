<?php

/**
 * @file
 * Install, update and uninstall functions for the content_access_limiter module.
 */

use Drupal\Core\Database\Database;

/**
 * Implements hook_install().
 */
function content_access_limiter_install() {
  $schema = Database::getConnection()->schema();
  
  // Create access log table if it doesn't exist.
  if (!$schema->tableExists('content_access_limiter_access_log')) {
    $schema->createTable('content_access_limiter_access_log', [
      'fields' => [
        'id' => [
          'type' => 'serial',
          'not null' => TRUE,
          'description' => 'Primary key.',
        ],
        'uid' => [
          'type' => 'int',
          'not null' => TRUE,
          'description' => 'The user ID.',
        ],
        'nid' => [
          'type' => 'int',
          'not null' => TRUE,
          'description' => 'The node ID.',
        ],
        'access_time' => [
          'type' => 'int',
          'not null' => TRUE,
          'description' => 'The timestamp of the access.',
        ],
      ],
      'primary key' => ['id'],
      'indexes' => [
        'uid' => ['uid'],
        'nid' => ['nid'],
        'access_time' => ['access_time'],
      ],
    ]);
  }

  // Create reset log table if it doesn't exist.
  if (!$schema->tableExists('content_access_limiter_reset_log')) {
    $schema->createTable('content_access_limiter_reset_log', [
      'fields' => [
        'id' => [
          'type' => 'serial',
          'not null' => TRUE,
          'description' => 'Primary key.',
        ],
        'uid' => [
          'type' => 'int',
          'not null' => TRUE,
          'description' => 'The user ID whose count was reset.',
        ],
        'reset_by' => [
          'type' => 'int',
          'not null' => TRUE,
          'description' => 'The user ID who performed the reset.',
        ],
        'reset_time' => [
          'type' => 'int',
          'not null' => TRUE,
          'description' => 'The timestamp of the reset.',
        ],
      ],
      'primary key' => ['id'],
      'indexes' => [
        'uid' => ['uid'],
        'reset_by' => ['reset_by'],
        'reset_time' => ['reset_time'],
      ],
    ]);
  }
}

/**
 * Implements hook_uninstall().
 */
function content_access_limiter_uninstall() {
  $schema = Database::getConnection()->schema();
  
  // Drop the access log table.
  if ($schema->tableExists('content_access_limiter_access_log')) {
    $schema->dropTable('content_access_limiter_access_log');
  }
  
  // Drop the reset log table.
  if ($schema->tableExists('content_access_limiter_reset_log')) {
    $schema->dropTable('content_access_limiter_reset_log');
  }
}
